{
  "metainfo" : {
    "migrationVersions" : {
      "gemBuilderVersion" : "v1"
    },
    "functions" : { },
    "codeGenConfiguration" : {
      "editableConfig" : true,
      "plibVersion" : {
        "mavenVersion" : "8.2.1",
        "pyPiVersion" : "1.9.16"
      },
      "sparkConfigJinjaEnabled" : true
    },
    "id" : "1",
    "uri" : "pipelines/customer_test",
    "sourceSuggestions" : [ ],
    "pipelineSettingsInfo" : {
      "applicationName" : "customer_test",
      "hasApplication" : true,
      "isFunctionsPackageDirDefined" : true
    },
    "language" : "python",
    "fabricId" : "195",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "python",
      "udfs" : [ ],
      "functionPackageName" : "shashankprophecyioteam.dataprocserverlesspoc.functions",
      "sharedFunctionPackageNames" : [ "prophecy.spark_basic.functions", "prophecy.warehouse.functions" ]
    },
    "udafs" : {
      "language" : "python",
      "code" : ""
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ {
          "name" : "country_code",
          "kind" : {
            "type" : "string",
            "value" : "RU"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        } ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ {
      "projectUID" : "224",
      "projectName" : "ProphecySparkBasicsPython",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "225",
      "projectName" : "ProphecyWarehousePython",
      "externalDependencies" : [ ]
    } ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "customer_test",
    "configurationVersion" : "v2"
  },
  "connections" : [ {
    "id" : "mwUElXo0IO1cYJgf_wpNf",
    "source" : "YV05ZLADw1O3hAedAlAfJ$$kbD9xZOKOWZlSVnQXlHZN",
    "sourcePort" : "jc1jjWjaPeTLC7OD0gdUq$$BafbmGNp-jJvAcUFkBPvp",
    "target" : "ILEWKKwaL_wE5ccpMzUop$$tPNXf0TcnHuE4YgyRTxhs",
    "targetPort" : "AosCzOl1HA3WlRbo6mDNt$$D21iHkNneNzSdA88A-Qqx"
  }, {
    "id" : "6wEGeD-VGh0Xs-jQLuDjG",
    "source" : "ILEWKKwaL_wE5ccpMzUop$$tPNXf0TcnHuE4YgyRTxhs",
    "sourcePort" : "N0Wr606BigNz6OB8Pp80Z$$NMtI7S7J-Ba5D8QOlF-Xc",
    "target" : "mDgGx_l9bKkdOFAvF7e1S$$Iv-azBfvWnXmOYCPI4AJo",
    "targetPort" : "ZAU0bM5Vvw1aa6uUbf_YR$$7cA4vOm99_isQhP6pmxKr"
  } ],
  "processes" : {
    "YV05ZLADw1O3hAedAlAfJ$$kbD9xZOKOWZlSVnQXlHZN" : {
      "id" : "YV05ZLADw1O3hAedAlAfJ$$kbD9xZOKOWZlSVnQXlHZN",
      "component" : "Source",
      "metadata" : {
        "label" : "customer_read",
        "slug" : "customer_read",
        "x" : -500,
        "y" : -220,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Reads customer data from a CSV file and returns a DataFrame containing customer information.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "jc1jjWjaPeTLC7OD0gdUq$$BafbmGNp-jJvAcUFkBPvp",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/customer_read"
      }
    },
    "mDgGx_l9bKkdOFAvF7e1S$$Iv-azBfvWnXmOYCPI4AJo" : {
      "id" : "mDgGx_l9bKkdOFAvF7e1S$$Iv-azBfvWnXmOYCPI4AJo",
      "component" : "Target",
      "metadata" : {
        "label" : "customer_write",
        "slug" : "customer_write",
        "x" : 80,
        "y" : -220,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Writes customer data to a CSV file, including headers and specified separator. Then, concatenates the CSV files into a single output file.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ {
          "id" : "ZAU0bM5Vvw1aa6uUbf_YR$$7cA4vOm99_isQhP6pmxKr",
          "slug" : "in0",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for each customer in the dataset.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "The given name of the customer.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "The family name or surname of the customer.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Contact phone number of the customer; formatted as a string with hyphens separating number segments.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Email address of the customer; Used for communication and account-related notifications.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "ISO 2-letter code representing the customer's country of residence.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Date when the customer's account was opened; Date is in YYYY-MM-DD format.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Status indicator for the customer account; Uses a single character to denote specific account conditions or privileges.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/customer_write"
      }
    },
    "ILEWKKwaL_wE5ccpMzUop$$tPNXf0TcnHuE4YgyRTxhs" : {
      "id" : "ILEWKKwaL_wE5ccpMzUop$$tPNXf0TcnHuE4YgyRTxhs",
      "component" : "Filter",
      "metadata" : {
        "label" : "Filter",
        "slug" : "Filter",
        "x" : -200,
        "y" : -240,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Filters the DataFrame based on a specific country code.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ {
          "id" : "AosCzOl1HA3WlRbo6mDNt$$D21iHkNneNzSdA88A-Qqx",
          "slug" : "in0",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for each customer in the dataset.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "The given name of the customer.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "The family name or surname of the customer.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Contact phone number of the customer; formatted as a string with hyphens separating number segments.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Email address of the customer; Used for communication and account-related notifications.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "ISO 2-letter code representing the customer's country of residence.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Date when the customer's account was opened; Date is in YYYY-MM-DD format.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Status indicator for the customer account; Uses a single character to denote specific account conditions or privileges.",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "N0Wr606BigNz6OB8Pp80Z$$NMtI7S7J-Ba5D8QOlF-Xc",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "columnsSelector" : [ "AosCzOl1HA3WlRbo6mDNt$$D21iHkNneNzSdA88A-Qqx##country_code" ],
        "condition" : {
          "format" : "sql",
          "expression" : "country_code = '$country_code'"
        }
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/wDp16mGH_team_30/QWF0O8MX_project_224.git&subPath=&tag=0.2.28.dev6&projectSubscriptionProjectId=224&path=gems/Filter",
        "projectName" : "ProphecySparkBasicsPython"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false,
    "autoUpdateOnRun" : false
  }
}